<?xml version='1.0' encoding='UTF-8'?>
<dataBase>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      O código abaixo deveria retornar se uma pessoa pode dirigir ou não no Brasil. É sabido que uma pessoa pode dirigir se já tiver 18 anos completos.
    </description>
    <code language = 'Python'>
def CanDrive(age)
    if age > 18:
        age = True
    else:
      age = False
    return age 
    </code>
    <code language = 'Lua'>
function canDrive(age)​
  return age &gt; 18​
end
    </code>
    <code language = 'C'>
int canDrive(int age){
  if (age &gt; 18) return 1;
  return 0;
}
    </code>  

    <entry type='int'>age</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct0(age){
        return age &gt;= 18;
      }
      function wrong0(age){
        return age &gt; 18;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Comandos Condicionais
    </assunto>
    <description>
      O código abaixo deveria retornar a soma de dois números.
    </description>

<code language = 'Python'>
def soma(a,b):      
  if a==b:
    print(a)
  else:
    print(a+b)
    </code>
    <code language = 'Lua'>
functiona add(a, b)
  if a==b then return a
  else return a+b
end
    </code>
    <code language ='C'>
int add(int a, int b){
  if (a == b) return a;
  else return a+b;
}
    </code>
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>

    <tip> digite apenas números</tip>
    <test>
      function correct1(a, b){
      return a+b
      }
      function wrong1(a, b){
      if (a == b) return a;
      else return a+b;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Comandos Condicionais
    </assunto>
    <description>
      O código deve retornar qual dos números informados é o maior.
    </description>
    <code language = 'Python'>
def ehmaior(a,b):
  if a &gt; b:
    return a
  if b &gt; a:
    return b
    </code>
    <code language='Lua'>
function maxPair(a, b)
  if a&gt;b then
    return a
  end
  if b&gt;a then
    return b
  end
  return 0
end
    </code>
    <code language='C'>
int maxPair(int a, int b){
  if(a &gt; b){
    return a;
  }
  if(b &gt; a){
    return b;
  }
  return 0;
}
    </code>
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct2(a, b){
        if( a &gt; b){
          return a;        
        }
        return b;
      }
      function wrong2(a, b){
        if(a &gt; b){
          return a;
        }
        if(b &gt; a){
          return b;
        }
        return 0;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      O código deve retornar qual é o menor dentre dois números.
    </description>
    <code language = 'Python'>
def min(a,b):
  return(a &lt; b and a) or (a &gt; b and b)
    </code>
    <code language ='Lua'>
int min(int a, int b){
  return (a &lt; b &amp;&amp; a) or (a &gt; b &amp;&amp; b);
}
    </code>
    <code language='C'>
int min(int a, int b){
  return (a &lt; b &amp;&amp; a) or (a &gt; b &amp;&amp; b);
}
    </code>
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>
    <tip> digite apenas números</tip>
    <test>
      function correct3(a, b){
        return (a &lt; b  &amp;&amp; a) || b;
      }
      function wrong3(a, b){
        return (a &lt; b &amp;&amp; a) || (a&gt;b &amp;&amp; b);
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      Carlos possui dois irmãos: Pedro e Welton. Carlos quer saber quantos irmãos são mais novos que ele.
    </description>
    <code language = 'Python'>
def irmaosCarlos(carlos, pedro, welton):
  if pedro &lt; carlos: 
    if welton &lt; carlos: 
      print(2)

    else:
      print(1)

  else:
    print(0)  
    </code>
    <code language='Lua'>
function irmaosCarlos(carlos, pedro, welton)
  if pedro &lt; carlos then
    if welton &lt; carlos then
      return 2
    end
    return 1
  end
  return 0
end
    </code>
    <code language='C'>
int irmaosCarlos(int carlos, int pedro, int welton){
  if (pedro &lt; carlos) {
    if (welton &lt; carlos){
      return 2;
    }
    return 1;
  }
  return 0;
}
    </code>
    <entry type = 'int'>carlos</entry>
    <entry type = 'int'>pedro</entry>
    <entry type = 'int'>welton</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct4(carlos, pedro, welton){
        var cont = 0;
        if (pedro &lt; carlos) {
          cont++;
        }
        if (welton &lt; carlos) {
          cont++;
        }
        return cont;
      }
      function wrong4(carlos, pedro, welton){
      if (pedro &lt; carlos) {
        if (welton &lt; carlos){
          return 2;
        }
        return 1;
      }
      return 0;
      }      
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      O código deve informar se há números repetidos entre os informados.
    </description>
    <code language = 'Python'>
def pair(a,b,c,d,e):
  if a==b or a==c or a==d or a==e or c==d or c==e or d==e:
    print(1)
  else:
    print(0)
    </code>
    <code language ='Lua'>
function pair(a, b, c, d, e)
  return a==b or a==c or a==d or a==e or c==d or c==e or d==e
end
    </code>
    <code language='C'>
int pair(int a, int b, int c, int d, int e){
  if(a==b || a==c || a==d || a==e || c==d || c==e || d==e) return 1;
  return 0;
}
    </code>

    <entry type='int'>a</entry>
    <entry type='int'>b</entry>
    <entry type='int'>c</entry>
    <entry type='int'>d</entry>
    <entry type='int'>e</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct5(a, b, c, d, e){
        return a==b || a==c || a==d || a==e || b == c || b==d || b==e || c==d || c==e || d==e;
      }
      function wrong5(a, b, c, d, e){
        return a==b || a==c || a==d || a==e || c==d || c==e || d==e;     
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      O código deve retornar se os lados dados podem formar um triângulo. É sabido que para formar um 
      triângulo, a soma de dois lados quaisquer deve ser maior que o outro lado.
    </description>
    <code language = 'Python'>
def ehtriangulo(a,b,c):
  if a + b &gt; c:
    print(1)
  else:
    print(0)
    </code>
    <code language ='Lua'>
function isTriangle(a, b, c)
  return a+b&gt;c
end
    </code>
    <code language ='C'>
int isTriangle(int a, int b, int c){
  if(a+b&gt;c) return 1;
  return 0;
}
    </code>
    <entry type='int'>a</entry>
    <entry type='int'>b</entry>
    <entry type='int'>c</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct6(a, b, c){
        return a+b&gt;c &amp;&amp; a+c&gt;b &amp;&amp; b+c&gt;a;
      }
      function wrong6(a, b, c){
        return a+b&gt;c;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      O código deve retornar a área de um triangulo de base b e altura h.
    </description>
    <code language = 'Python'>
def area(b,h):
  if (b&gt;h):
    return b/2 * h/2
  else:
    return b*h/2
    </code>
    <code language ='Lua'>
function area(b, h)
  if(b&gt;h) then
    return b/2*h/2
  else
    return b*h/2
  end
end
    </code>
    <code language = 'C'>
float area(int b, int h){
  if(b&gt;h){
    return b/2*h/2;
  }else{
    return b*h/2;
  }
}
    </code>
    <entry type ='int'>b</entry>
    <entry type='int'>h</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct7(b, h){
        return b*h/2;
      }
      function wrong7(b, h){
        if(b&gt;h){
          return b/2*h/2;
        }else{
          return b*h/2;
        }
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      O código abaixo deveria retornar o maior dentre três números inteiros.
    </description>
    <code language = 'Python'>
def maior(a,b,c):
  if a &gt; b and a &gt; c:
    return a
  elif b &gt; a and b &gt; c:
    return b
  else:
    return c
    </code>
    <code language ='Lua'>
function max3(a, b, c)
  if a &#62; b and a &#62; c then
    return a
  elseif b &#62; a and b &#62; c then
    return b
  else
    return c
  end
end
    </code>
    <code language ='C'>
int max3(int a, int b, int c){
  if (a &#62; b &#38;&#38; a &#62; c){
    return a;
  }else if(b &#62; a &#38;&#38; b &#62; c){
    return b;
  }else{
    return c;
  }
}
    </code>
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>
    <entry type = 'int'>c</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct8(a, b, c){
        var maior = a;
          if(b &#62; maior){
            maior = b;
          }
          if(c &#62; maior){
            maior = c;
        } 
        return maior;
      }

      function wrong8(a, b, c){
        if (a&#62;b &#38;&#38; a&#62;c){
          return a;
        }else if(b&#62;a &#38;&#38; b&#62;c){
          return b;
        }else{
          return c;
        }
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Comandos Condicionais
    </assunto>
    <description>
      Na montanha russa do parque de diversões TeleMídia MegaPark, as pessoas podem entrar se ambas 
      tiverem pelo menos 16 anos ou se a soma de suas idades for maior que 32 anos.
    </description>    
    <code language = 'Python'>
def canEnter(a,b):
  if (a &gt;= 16 and b &gt;= 16) and (a + b &gt;= 32):
    return 1
  else:
    return 0
    </code>
    <code language = 'Lua'>
function canEnter(a, b)​
  if(a+b &gt;= 32 and a&gt;= 16 and b&gt;=16​){
    return 1;
  }else{
    return 0;
  }
end
    </code>    
    <code language = 'C'>
int canEnter(int a, int b){
  if(a+b &gt;= 32 &amp;&amp; a&gt;=16 &amp;&amp; b&gt;=16){
    return 1;
  }else{
    return 0;
  }
}
    </code>
    
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>

    <tip> digite apenas números</tip>
    <test>
      function correct9(a,b){
        return a+b &gt;=32 || (a&gt;=16 &amp;&amp; b&gt;=16);
      }
      function wrong9(a,b){
        return a+b &gt;= 32 &amp;&amp; a&gt;=16 &amp;&amp; b&gt;=16;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      A TV por assinatura TeleMídia TV possui 998 canais, que vão do canal 2 ao canal 999. Os canais 
      payperview da TeleMídia TV são os canais múltiplos de 11 (Ex: 22, 44, 121). 
      O código deve retornar se um dado número é ou não o número de um canal payperview da TeleMídia TV.
    </description>
    <code language = 'Python'>
def payperview(channel):
  flag = 0
  if(channel &gt; 1 and channel&lt; 1000):
    flag = 1
  else:
    flag = 0

  if(channel%11 == 0):
    flag = 1;
  else:
    flag = 0;
    print(flag)
  return flag
    </code>
    <code language ='Lua'>
function payperview(channel)
  flag = channel&gt;1 and channel&lt;1000
  flag = channel%11 == 0        
  return flag
end
    </code>
    <code language ='C'>
int payperview(int channel){
  int flag = 0;
  if(channel&gt;1 &amp;&amp; channel&lt;1000){
    flag = 1;
  else{
    flag = 0;
  }
  if(channel%11 == 0){
    flag = 1;
  }else{
    flag = 0;
  }
  return flag;
}
    </code>
  
    <entry type ='int'>channel</entry>
    
    <tip> digite apenas números</tip>
    <test>
      function correct10(channel){
        flag = channel&gt;1 &amp;&amp; channel&lt;1000;
        flag = flag &amp;&amp; channel%11 == 0
        return flag;
      }
      function wrong10(channel){
        flag = channel&gt;1 &amp;&amp; channel&lt;1000;
        flag = channel%11 == 0
        return flag;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      A função deve retornar quantos números pares há entres os dados. Exemplos de números: (2, 4, 6, 8)
    </description>
    <code language = 'Python'>
def pares(a,b,c):
  contador = 0
  if a % 2 == 0:
    contador += 1
  elif b % 2 == 0:
    contador += 1
  elif c % 2 == 0:
    contador += 1
return contador
    </code>
    <code language ='Lua'>
function contaPares(a, b, c)
  count = 0
  if a%2 == 0 then
    count = count + 1
  elseIf b%2 == 0 then
    count = count + 1
  elseif c%2 == 0 then
    count = count + 1
  end
  return count
end
    </code>
    <code language ='C'>
int contaPares(int a, int b, int c){
  int count = 0;
  if(a%2 == 0){
    count++;
  }else if(b % 2 == 0){
    count++;
  }else if(c % 2 == 0){
    count++;
  }
  return count;
}
    </code>
  
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>
    <entry type = 'int'>c</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct11(a, b, c){
        count = 0;
        if(a%2 == 0){
          count++;
        }
        if(b%2 == 0){
          count++;
        }
        if(c%2 == 0){
          count++;
        }
        return count;
      }
      function wrong11(a, b, c){
        count = 0;
        if(a%2 == 0){
          count++;
        }else if(b % 2 == 0){
          count++;
        }else if(c % 2 == 0){
          count++;
        }
        return count;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Comandos Condicionais
    </assunto>
    <description>
      O código deve retornar se há algum número ímpar dentre os dados.
    </description>

  <code language = 'Python'>
def impar(a,b):
  if(a+b)%2 == 0 :
    return False
  else:
    return True
    </code>
    <code language ='Lua'>
function temImpar(a, b)
  if(a+b)%2 == 0 then
    return false
  else
    return true
  end
end
    </code>
    <code language ='C'>
int temImpar(int a, int b){
  if((a+b)%2 == 0){
    return 0;
  }else{
    return 1;
  }
}
    </code>
  
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>

    <tip> digite apenas números</tip>
    <test>
      function correct12(a, b){
        if(a%2 == 1 || b%2 == 1) return 1;
        return 0;
      }
      function wrong12(a, b){
        if((a+b)%2 == 0){
          return 0;
        }else{
          return 1;
        }
      }      
    </test>  
  </question>
  <question>
    <assunto>
      Conteúdo: Comandos Condicionais
    </assunto>
    <description>
      Dados três números, o código deve retornar se eles formam ou não uma progressão geométrica.
    </description>

  <code language = 'Python'>
def PG(a,b):
  if (b/a == c/b):
    return 1
else:
  return 0
    </code>
    <code language ='Lua'>
function geoProg(a, b, c)
  return (b/a == c/b)
end
    </code>
    <code language ='C'>
int geoProg(int a, int b, int c){
  if(b/a == c/b) return 1;
  return 0;
}
    </code>

    <entry type ='string'>a</entry>
    <entry type ='string'>b</entry>
    <entry type ='string'>c</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct13(a, b, c){
        if(a == 0){
          if(b == 0 &amp;&amp; c==0){
            return true;
          }
          return false;
        }
        return (b/a == c/b);
      }
      function wrong13(a, b, c){
        return (b/a == c/b);
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Comandos Condicionais
    </assunto>
    <description>
      Dadas três strings, o código deve retornar quantas delas são a palavra "cosmos".
    </description>
  
  <code language = 'Python'>
def CountCosmos(a,b,c):
  if a == "cosmos" :
    if b == "cosmos" :
      if c == "cosmos" :
        return 3
    else:
        return 2

  elif c == "cosmos" :
    return 2
  else:
    return 1

else:
  if b == "cosmos" :
    return 1
  elif c == "cosmos" :
    return 1
  else:
    return 0
    </code>
    <code language ='Lua'>
function countCosmos(a, b, c)
  if a == "cosmos" then
    if b == "cosmos" then
      if c == "cosmos" then
        return 3
      else
        return 2
      end
    elseif c == "cosmos" then
       return 2
    else
      return 1
    end
  else
    if b == "cosmos" then
      return 1
    elseif c == "cosmos" then
      return 1
    else
      return 0
    end
  end
  return 0
end
    </code>
    <code language = 'C'>
int countCosmos(char *a, char *b,char *c){
  if (strcmp(a, "cosmos")==0){
    if (strcmp(b, "cosmos")==0){
      if (strcmp(c, "cosmos")==0){
        return 3;
      }else{
        return 2;
      }
    else if(strcmp(c, "cosmos")==0){
       return 2;
    }else{
      return 1;
    }
  }else{
    if (strcmp(b, "cosmos")==0){
      return 1;
    }else if (strcmp(c, "cosmos")==0){
      return 1;
    }else{
      return 0;
    }
  }
  return 0;
}
    </code>
  
    <entry type ='string'>a</entry>
    <entry type ='string'>b</entry>
    <entry type ='string'>c</entry>

    <tip> insira uma string</tip>

    <test>
      function correct14(a, b, c){
        count = 0;
        if(a == "cosmos") count++;
        if(b == "cosmos") count++;
        if(c == "cosmos") count++;
        return count;
      }
      function wrong14(a, b, c){
        if (a == "cosmos"){
          if (b == "cosmos"){
            if (c == "cosmos"){
              return 3;
            }else{
              return 2;
            }
          }else if(c == "cosmos"){
             return 2;
          }else{
            return 1;
          }
        }else{
          if (b == "cosmos"){
            return 1;
          }else if (c == "cosmos"){
            return 1;
          }else{
            return 0;
          }
        }
        return 0;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      A função deve retornar as raízes x1 e x2 de uma equação do segundo grau.
    </description>
    
    <code language = 'Python'>
def raizes(a,b,c):
  delta = b*b - 4*a*c
  if delta &lt; 0:
    return null

  x1 = (-b - ((delta) ** 0.5)) / 2*a
  x2 = (-b + ((delta) ** 0.5)) / 2*a

return x1, x2
    </code>
    <code language = 'Lua'>
function equation(a, b, c)
  delta = b*b – 4*a*c
  if delta&lt;0 then
    return nil
  end
  x1 = (-b-math.root(delta))/2*a
  x2 = (-b+math.root(delta))/2*a
  return x1, x2
end
    </code>
    <code language = 'C'>
float * equation(float a,float b,float c){
  float delta = b*b – 4*a*c;
  float *x;
  if (delta&lt;0){
    return NULL;
  }
  x = (float *)malloc(sizeof(float)*2);
  x[0] = (-b-sqrt(delta))/2*a;
  x[1] = (-b+sqrt(delta))/2*a;
  return x;
}
    </code>
    
    <entry type ='float'>a</entry>  
    <entry type ='float'>b</entry>  
    <entry type ='float'>c</entry>

    <tip> digite apenas números</tip>
    <test>
      function correct15(a, b, c){
        //delta = 0;
        delta = (b*b)-4*a*c;
        if (delta&lt;0){
          return null;
        }
        x = (-b-Math.sqrt(delta))/(2*a);
        return x;
      }
      function wrong15(a, b, c){
        //delta = 0;
        delta = (b*b)-4*a*c;
        if (delta&lt;0){
          return null;
        }
        x = (-b-Math.sqrt(delta))/2*a;
        return x;
      }
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
    A UFMA está precisando comprar 10 computadores para equipar o laboratório do curso de Ciência da 
    Computação. Contudo, o orçamento disponível é de apenas R$ 20.000. Como o pagamento será à vista, 
    cada computador reberá um desconto de 10%. O código abaixo deveria retornar se a UFMA poderá comprar 
    os computadores, sabido o valor unitário de cada um.
    </description>
    <code language = 'Python'>
def podeComprar(valor):
  if (valor + valor*0.10) * 10 &gt;= 20000:
    return True
  else:
    return False
    </code>
    <code language ='Lua'>
function podeComprar(valor)
  if ( valor - valor * 0.1) * 10 &gt;= 20000 then
  return 1
  else
  return 0
  end
end
    </code>
    <code language ='C'>
int podeComprar(int valor){
  if ((valor + valor*0.10) * 10 &gt;= 20000){
    return 1;
  } else {
    return 0;
  }
}
    </code>

    <entry type = 'int'>valor</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct16(valor){
        if ((valor - valor*0.10) * 10 &lt;=n 20000){
          return 1;
      } else 
        return 0;
      }
      function wrong16(a, b){
        if ((valor + valor*0.10) * 10 &gt;= 20000){
          return 1;
        }else 
          return 0;
      } 
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      O código abaixo deveria imprimir na tela "valores aceitos" se B for maior do que C e se D for maior 
      do que A, e a soma de C com D for maior que a soma de A e B e se C e D, ambos, forem positivos e se 
      a variável A for par. Caso contrário, deveria imprimir "valores não aceitos".
    </description>

<code language = 'Python'>
def ValoresValidos(A,B,C,D):

if B&gt;C and D&gt;A and C+D &gt; A+B and A+B &gt; 0 and C+D &gt; 0 or A%2 ==0:
  print("Valores aceitos")

else: 
  print("Valores não aceitos")
    </code>
    <code language ='Lua'>
function valoresAceitos(A,B,C,D)
if (B&gt;C and D&gt;A and C+D &gt; A+B and A+B &gt; 0 and C+D &gt; 0 or A%2 == 0) then 
  print ("valores aceitos") 
  end
else
  print ("valores nao aceitos")
  end
    </code>
  
    <code language ='C'>
void ValoresValidos(int A, int B, int C, int D){

  if ((B>C &amp;&amp; D&gt;A and C+D &gt; A+B &amp;&amp; C+D &gt; 0) || ( A%2 ==0)){
     printf("valores aceitos");
  }
  else printf("valores nao aceitos");
}
    </code>
  
    <entry type ='int'>n</entry>

    <tip> digite apenas números</tip>

    <test>
      function correct17(A,B,C,D){
        if ((B &gt;C &amp;&amp; D &gt; A &amp;&amp; C+D &gt; A+B &amp;&amp; C &gt;= 0 &amp;&amp; D &gt;= 0) &amp;&amp; ( A % 2 ==0)){
          return("valores aceitos");
        }
        else return("valores nao aceitos");
      }
      function wrong17(A,B,C,D){
        if ((B &gt;C &amp;&amp; D &gt; A &amp;&amp; C+D &gt; A+B &amp;&amp; C &gt;= 0 &amp;&amp; D &gt;= 0) || ( A % 2 ==0)){
          return("valores aceitos");
        }
        else return("valores nao aceitos");
      } 
    </test>
  </question>
  <question>
    <assunto>
      Conteúdo: Atribuição e Comandos Condicionais
    </assunto>
    <description>
      Na disciplina de Algoritmos 1 da Universidade Cosmos, os alunos precisam responder duas provas por 
      semestre. A primeira delas tem peso 1 e a segunda peso 3, caso a média das notas seja menor que 7, 
      o aluno será reprovado na disciplina. O código abaixo deveria calcular a média dos alunos e informar 
      a sua situação.
    </description>
    <code language = 'Python'>
def mediaAlg(n1,n2):
  if ((n1*2 + n2*4)/6 &gt; 7:
    return("Aprovado")
  else:
    return("Reprovado")
    </code>
    <code language ='Lua'>
function mediaAlg(n1,n2)
  if ((n1*2 + n2*4)/6) &gt; 7) then
    print("Aprovado")
  end 
      
  else 
    print("Reprovado")
  end
    </code>
    <code language ='C'>
void mediaAlg(n1,n2){
  if(((n1*1 + n2*3)/4) &gt; 7) {
      printf("Aprovado");}
    else printf("Reprovado");
}
    </code>
    <entry type ='int'>n1</entry>
    <entry type ='int'>n2</entry>

    <tip> digite apenas números</tip>
    <test>
       function correct18(n1,n2){
          if(((n1*1 + n2*3)/4) &gt;= 7) {
            return("Aprovado");}

          else return("Reprovado");
        }
        function wrong18(n1,n2){
          if(((n1*1 + n2*3)/4) &gt; 7) {
            return("Aprovado");}

          else return("Reprovado");
        }
    </test>
  </question>
  <question>
      <assunto>
        Conteúdo: Atribuição e Comandos Condicionais
      </assunto>
      <description>
        O código abaixo deveria retornar se um dado ano é bissexto ou não.
      </description>

      <code language = 'Python'>
def ehbissexto(ano):
  if (ano%4==0 or ano%100!=0) and (ano%400==0):
    return True
  else:
    return False
      </code>
      <code language ='Lua'>
function ehbissexto(ano)
  if (ano%4==0 or ano%100!=0) and (ano%400==0) then
    return 1
  else
    return 0
  end
      </code>
      <code language ='C'>
int ehbissexto(int ano){
  if (ano%4==0 || ano%100!=0) &amp;&amp; (ano%400==0){
    return 1
  }
  else{
    return 0
  }
    return maior;
  }
      </code>

      <entry type ='int'>ano</entry>

      <tip> digite apenas números</tip>

      <test>
        function correct19(ano){
          if ((ano%4==0  &amp;&amp; ano%100!=0) ||  (ano%400==0)){
          return 1
          }
          else
            return 0
        }
        function wrong19(ano){
            if((ano%4==0 ||  ano%100 != 0)  &amp;&amp; (ano%400==0)){
              return 1
            }
            else
              return 0
        }
      </test>
   </question>
</dataBase>