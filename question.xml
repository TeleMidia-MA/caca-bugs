<?xml version='1.0' encoding='UTF-8'?>
<dataBase>
  <question>
    <description>
      Carlos possui dois irmãos: Pedro e Welton. Carlos quer saber quantos irmãos são mais novos que ele.
    </description>
    
    <code language = 'Lua'>
function irmaosCarlos(carlos, pedro, welton)
  if pedro &lt; carlos then
    if welton &lt; carlos then
      return 2
    end
    return 1
  end
  return 0
end
    </code>
    
    <code language = 'c'>
int irmaosCarlos(int carlos, int pedro, int welton){
  if (pedro &lt; carlos) {
    if (welton &lt; carlos){
      return 2;
    }
    return 1;
  }
  return 0;
}
    </code>  


    <entry type = 'int'>carlos</entry>
    <entry type = 'int'>pedro</entry>
    <entry type = 'int'>welton</entry>

    <test>
      function correct0(carlos, pedro, welton){
        var cont = 0;
        if (pedro &lt; carlos) {
          cont++;
        }
        if (welton &lt; carlos) {
          cont++;
        }
        return cont;
      }
      function wrong0(carlos, pedro, welton){
      if (pedro &lt; carlos) {
        if (welton &lt; carlos){
          return 2;
        }
        return 1;
      }
      return 0;
      }
    </test>
  </question>
  <question>
    <description>
      O código abaixo deveria retornar se uma pessoa pode dirigir ou não no Brasil. É sabido que uma pessoa pode dirigir se já tiver 18 anos completos.
    </description>

    <code language = 'Lua'>
function canDrive(age)​
  return age &gt; 18​
end
    </code>
    <code language ='c'>
int canDrive(int age){
  return age &gt; 18;
}
    </code>
    <entry type='int'>age</entry>
    <test>
      function correct1(age){
      return age &gt;= 18;
      }
      function wrong1(age){
      return age &gt; 18;
      }
    </test>
  </question>

  <question>
    <description>
      O código abaixo deveria retornar a soma de dois números. 
    </description>
    
    <code language = 'Lua'>
functiona add(a, b)
  if a==b then return a
  else return a+b
end
    </code>
      
    <code language = 'c'>
int add(int a, int b){
  if (a == b) return a;
  else return a+b;
}
    </code>
    
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>

    <test>
      function correct2(a, b){
      return a+b
      }
      function wrong2(a, b){
      if (a == b) return a;
      else return a+b;
      }
    </test>
  </question>

  <question>
    <description>
      Na montanha russa do parque de diversões TeleMídia MegaPark, as pessoas podem entrar se ambas tiverem pelo menos 16 anos ou se a soma de suas idades for maior que 32 anos.
    </description>
    <code language='Lua'>
function canEnter(a, b)​
  if(a+b &gt;= 32 and a&gt;= 16 and b&gt;=16​){
    return 1;
  }else{
    return 0;
  }
end
    </code>
    <code language='c'>
int canEnter(int a, int b){
  if(a+b &gt;= 32 &amp;&amp; a&gt;=16 &amp;&amp; b&gt;=16){
    return 1;
  }else{
    return 0;
  }
}
    </code>
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>
    <test>
      function correct3(a,b){
      return a+b &gt;=32 || (a&gt;=16 &amp;&amp; b&gt;=16);
      }
      function wrong3(a,b){
      return a+b &gt;= 32 &amp;&amp; a&gt;=16 &amp;&amp; b&gt;=16;
      }
    </test>
  </question>
  <question>
    <description>
      O código deve informar se há números repetidos entre os informados.
    </description>
    <code language ='Lua'>
function pair(a, b, c, d, e)
  return a==b or a==c or a==d or a==e or c==d or c==e or d==e
end
    </code>
    <code language='c'>
int pair(int a, int b, int c, int d, int e){
  if(a==b || a==c || a==d || a==e || c==d || c==e || d==e)
    return 1
  return 0
}
    </code>
    <entry type='int'>a</entry>
    <entry type='int'>b</entry>
    <entry type='int'>c</entry>
    <entry type='int'>d</entry>
    <entry type='int'>e</entry>
    <test>
      function correct4(a, b, c, d, e){
        return a==b || a==c || a==d || a==e || b == c || b==d || b==e || c==d || c==e || d==e;
      }
      function wrong4(a, b, c, d, e){
        return a==b || a==c || a==d || a==e || c==d || c==e || d==e;     
      }
    </test>
  </question>
  <question>
    <description>
      O código deve retornar se os lados dados podem formar um triângulo. É sabido que para formar um triângulo, a soma de dois lados quaisquer deve ser maior que o outro lado.
    </description>
    <code language='Lua'>
function isTriangle(a, b, c)
  return a+b&gt;c
end
    </code>
    <code language='c'>
int isTriangle(int a, int b, int c){
  if(a+b&gt;c) return 1
  return 0
}
    </code>
    <entry type='int'>a</entry>
    <entry type='int'>b</entry>
    <entry type='int'>c</entry>
    <test>
      function correct5(a, b, c){
        return a+b&gt;c &amp;&amp; a+c&gt;b &amp;&amp; b+c&gt;a;
      }
      function wrong5(a, b, c){
        return a+b&gt;c;
      }      
    </test>
  </question>
  <question>
    <description>
      O código deve retornar a área de um triangulo de base b e altura h.
    </description>
    <code language ='Lua'>
function area(b, h)
  if(b&gt;h) then
    return b/2*h/2
  else
    return b*h/2
  end
end
    </code>
    <code language='c'>
float area(int b, int h){
  if(b&gt;h){
    return b/2*h/2;
  }else{
    return b*h/2;
  }
}
    </code>
    <entry type ='int'>b</entry>
    <entry type='int'>h</entry>
    <test>
      function correct6(b, h){
        return b*h/2;
      }
      function wrong6(b, h){
        if(b&gt;h){
          return b/2*h/2;
        }else{
          return b*h/2;
        }
      }
    </test>
  </question>
  <question>
    <description>O código deve retornar qual dos números informados é o maior.</description>
    <code language ='Lua'>
function maxPair(a, b)
  if a&gt;b then
    return a
  end
  if b&gt;a then
    return b
  end
  return 0
end
    </code>
    <code language ='c'>
int maxPair(int a, int b){
  if(a &gt; b){
    return a;
  }
  if(b &gt; a){
    return b;
  }
  return 0;
}
    </code>
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>
    <test>
      function correct7(a, b){
        if( a &gt; b){
          return a;        
        }
        return b;
      }
      function wrong7(a, b){
        if(a &gt; b){
          return a;
        }
        if(b &gt; a){
          return b;
        }
        return 0;
      }
    </test>
  </question>
  <question>
    <description>
      O código deve retornar qual é o menor dentre dois números.
    </description>
    <code language ='Lua'>
function min(a, b)
  return (a &lt; b and a) or (a &gt; b and b)
end
    </code>
    <code language = 'c'>
int min(int a, int b){
  return (a &lt; b &amp;&amp; a) or (a &gt; b &amp;&amp; b);
}
    </code>
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>
    <test>
      function correct8(a, b){
        return (a &lt; b  &amp;&amp; a) || b;
      }
      function wrong8(a, b){
        return (a &lt; b &amp;&amp; a) || (a&gt;b &amp;&amp; b);
      }
    </test>
  </question>
  <question>
    <description>A TV por assinatura TeleMídia TV possui 998 canais, que vão do canal 2 ao canal 999. Os canais payperview da TeleMídia TV são os canais múltiplos de 11 (Ex: 22, 44, 121). O código deve retornar se um dado número é ou não o número de um canal payperview da TeleMídia TV.</description>
    <code language ='Lua'>
function payperview(channel)
  flag = channel&gt;1 and channel&lt;1000
  flag = channel%11 == 0        
  return flag
end
    </code>
    <code language ='c'>
int payperview(int channel){
  int flag;
  if(channel&gt;1 &amp;&amp; channel&lt;1000) flag = 1;
  if(channel%11 == 0) flag = 1;
  return flag;
}
    </code>
    <entry type ='int'>channel</entry>
    <test>
      function correct9(channel){
        flag = channel&gt;1 &amp;&amp; channel&lt;1000;
        flag = flag &amp;&amp; channel%11 == 0
        return flag;
      }
      function wrong9(channel){
        flag = channel&gt;1 &amp;&amp; channel&lt;1000;
        flag = channel%11 == 0
        return flag;
      }
    </test>
  </question>
  <question>
    <description>
      O código abaixo deveria retornar o maior dentre três números inteiros.
    </description>    
    <code language = 'Lua'>
function max3(a, b, c)
  if a &#62; b and a &#62; c then
    return a
  elseif b &#62; a and b &#62; c then
    return b
  else
    return c
  end
end
    </code>    
    <code language = 'c'>
int max3(int a, int b, int c){
  if (a &#62; b &#38;&#38; a &#62; c){
    return a;
  }else if(b &#62; a &#38;&#38; b &#62; c){
    return b;
  }else{
    return c;
  }
}
    </code>
    
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>
    <entry type = 'int'>c</entry>

    <test>
      function correct10(a, b, c){
      var maior = a;
      if(b &#62; maior){
      maior = b;
      }
      if(c &#62; maior){
      maior = c;
      } return maior;
      }
      function wrong10(a, b, c){
      if (a&#62;b &#38;&#38; a&#62;c){
      return a;
      }else if(b&#62;a &#38;&#38; b&#62;c){
      return b;
      }else{
      return c;
      }
      }
    </test>
  </question>
  <question>
    <description>
      A função deve retornar quantos números pares há entres os dados.
    </description>
    <code language ='Lua'>
function countingEvens(a, b, c)
  count = 0
  if a%2 == 0 then
    count = count + 1
  elseIf b%2 == 0 then
    count = count + 1
  elseif c%2 == 0 then
    count = count + 1
  end
  return count
end
    </code>
    <code language ='c'>
int countingEvens(int a, int b, int c){
  int count = 0;
  if(a%2 == 0){
    count++;
  }else if(b % 2 == 0){
    count++;
  }else if(c % 2 == 0){
    count++;
  }
  return count;
}
    </code>
  
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>
    <entry type = 'int'>c</entry>

    <test>
      function correct11(a, b, c){
        count = 0;
        if(a%2 == 0){
          count++;
        }
        if(b%2 == 0){
          count++;
        }
        if(c%2 == 0){
          count++;
        }
        return count;
      }
      function wrong11(a, b, c){
        count = 0;
        if(a%2 == 0){
          count++;
        }else if(b % 2 == 0){
          count++;
        }else if(c % 2 == 0){
          count++;
        }
        return count;
      }
    </test>
  </question>
  <question>
    <description>
      O código deve retornar se há algum número ímpar dentre os dados.
    </description>
    <code language ='Lua'>
function countOdds(a, b)
  if(a+b)%2 == 0 then
    return 0
  else
    return 1
  end
end
    </code>
    <code language ='c'>
int countOdds(int a, int b){
  if((a+b)%2 == 0){
    return 0;
  }else{
    return 1;
  }
}
    </code>
  
    <entry type ='int'>a</entry>
    <entry type ='int'>b</entry>

    <test>
      function correct12(a, b){
        if(a%2 == 1 || b%2 == 1) return 1;
        return 0;
      }
      function wrong12(a, b){
        if((a+b)%2 == 0){
          return 0;
        }else{
          return 1;
        }
      }      
    </test>
  </question>
  <question>
    <description>
      Dados três números, o código deve retornar se eles formam ou não uma progressão geométrica.
    </description>

    <code language ='Lua'>
function geoProg(a, b, c)
  return (b/a == c/b)
end
    </code>
    <code language ='c'>
int geoProg(int a, int b, int c){
  if(b/a == c/b) return 1;
  return 0;
}
    </code>
  
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>
    <entry type = 'int'>c</entry>

    <test>
      function correct13(a, b, c){
        if(a == 0){
          if(b == 0 &amp;&amp; c==0){
            return true;
          }
          return false;
        }
        return (b/a == c/b);
      }
      
      function wrong13(a, b, c){
        return (b/a == c/b);
      }
    </test>  
  </question>
  <question>
    <description>
      Dadas três strings, o código deve retornar quantas delas são a palavra "cosmos".
    </description>
  
    <code language ='Lua'>
function countCosmos(a, b, c)
  if a == "cosmos" then
    if b == "cosmos" then
      if c == "cosmos" then
        return 3
      else
        return 2
      end
    elseif c == "cosmos" then
       return 2
    else
      return 1
    end
  else
    if b == "cosmos" then
      return 1
    elseif c == "cosmos" then
      return 1
    else
      return 0
    end
  end
  return 0
end
    </code>
  
    <code language ='c'>
int countCosmos(char *a, char *b,char *c){
  if (strcmp(a, "cosmos")==0){
    if (strcmp(b, "cosmos")==0){
      if (strcmp(c, "cosmos")==0){
        return 3;
      }else{
        return 2;
      }
    else if(strcmp(c, "cosmos")==0){
       return 2;
    }else{
      return 1;
    }
  }else{
    if (strcmp(b, "cosmos")==0){
      return 1;
    }else if (strcmp(c, "cosmos")==0){
      return 1;
    }else{
      return 0;
    }
  }
  return 0;
}
    </code>

    <entry type ='string'>a</entry>
    <entry type ='string'>b</entry>
    <entry type ='string'>c</entry>

    <test>
      function correct14(a, b, c){
        count = 0;
        if(a == "cosmos") count++;
        if(b == "cosmos") count++;
        if(c == "cosmos") count++;
        return count;
      }
      function wrong14(a, b, c){
        if (a == "cosmos"){
          if (b == "cosmos"){
            if (c == "cosmos"){
              return 3;
            }else{
              return 2;
            }
          }else if(c == "cosmos"){
             return 2;
          }else{
            return 1;
          }
        }else{
          if (b == "cosmos"){
            return 1;
          }else if (c == "cosmos"){
            return 1;
          }else{
            return 0;
          }
        }
        return 0;
      }
    </test>
  </question>
  <question>
    <description>
      A função deve retornar as raízes x1 e x2 de uma equação do segundo grau.
    </description>
  
    <code language ='Lua'>
function equation(a, b, c)
  delta = b*b – 4*a*c
  if delta&lt;0 then
    return nil
  end
  x1 = (-b-math.root(delta))/2*a
  x2 = (-b+math.root(delta))/2*a
  return x1, x2
end
    </code>
    <code language = 'c'>
float * equation(float a,float b,float c){
  float delta = b*b – 4*a*c;
  float *x;
  if (delta&lt;0){
    return NULL;
  }
  x = (float *)malloc(sizeof(float)*2);
  x[0] = (-b-sqrt(delta))/2*a;
  x[1] = (-b+sqrt(delta))/2*a;
  return x;
}
    </code>
  
    <entry type ='float'>a</entry>  
    <entry type ='float'>b</entry>  
    <entry type ='float'>c</entry>

    <test>
      function correct15(a, b, c){
        //delta = 0;
        delta = (b*b)-4*a*c;
        if (delta&lt;0){
          return null;
        }
        x = (-b-Math.sqrt(delta))/(2*a);
        return x;
     }
     function wrong15(a, b, c){
        //delta = 0;
        delta = (b*b)-4*a*c;
        if (delta&lt;0){
          return null;
        }
        x = (-b-Math.sqrt(delta))/2*a;
        return x;
     }
    </test>
  </question>
  <question>
    <description>
      O código abaixo deve retornar o primeiro número elevado ao segundo(A elevado a B).
    </description>
    
    <code language = 'Lua'>
function potenciacao(a, b)
  total = a
  for i = 1, b-1 do
    total = total*a
  end
  return total
end
    </code>
    <code language = 'c'>
int potenciacao(int a, int b){
  int total = a, i;
  for(i = 1; i &lt;= b-1; i++){
    total = total*a;
  }
  return total;
}
    </code>
    
    <entry type = 'int'>a</entry>
    <entry type = 'int'>b</entry>

    <test>
      function correct16(a, b){
      total = 1;
      for(i = 1; i&lt;= b; i++){
      total = total*a;
      }
      return total;
      }
      function wrong16(a, b){
      total = a;
      for(i = 1; i&lt;= b-1; i++){
      total = total*a;
      }
      return total;
      }
    </test>
  </question>
  <question>
    <description>
      Dado um número, o código deve retornar seu fatorial.
    </description>
    <code language ='Lua'>
function fatorial(n)
  for i=n-1, 1, -1 do
    n = n*i
  end
  return n
end
    </code>
    <code language ='c'>
int fatorial(int n){
  for (i=n-1; i&gt;=1; i--){
    n = n*i;
  }
  return n;
}
    </code>

    <entry type ='int'>n</entry>
    <test>
      function correct17(n){
        total = 1
        for (i=1; i&lt;=n; i++){
          total = total*i
        }
        return total;
      }
      function wrong17(n){
        for (i=n-1; i&gt;=1; i--){
          n = n*i;
        }
        return n;
      }
    </test>
  </question>
  <question>
    <description>
      O código deve retornar o maior número de um vetor de tamanho 8.
    </description>
    <code language ='Lua'>
function maiorVet( v )
  maior = 0
  for i=1,8 do
    if v[i]&gt;maior then
      maior = v[i]
    end
  end
  return maior
end
    </code>
    <code language ='c'>
int maiorVet(int *v){
  int i, maior = 0;
  for (i = 0; i &lt; 5; i++){
    if (v[i]&gt;maior){
      maior = v[i];
    }
  }
  return maior;
}
    </code>
    <entry type ='vector'>v</entry>
    <test>
      function correct18(v){
        maior = v[0];
        for (i = 1; i &lt; 5; i++){
          if (v[i]&gt;maior){
            maior = v[i];
          }
        }
        return maior;
      }
      function wrong18(v){
        maior = 0;
        for (i = 0; i &lt; 5; i++){
          if (v[i]&gt;maior){
            maior = v[i];
          }
        }
        return maior;
      }
    </test>
  </question>
  <question>
    <description>
      A função deve retornar se um número é ou não primo.
    </description>

    <code language ='Lua'>
function ehPrimo(num)
  if num&gt;0 then
    for i=2,num/2 do
      if num%i == 0 then
        return false
      end
    end
    return true
  end
  return false
end
    </code>
  
    <code language ='c'>
int ehPrimo(int num){
  int i;
  if(num&gt;0){
    for (i=2; i&lt;=num/2; i++){
      if( num%i == 0 ){
        return 0;
      }
    }
    return 1;
  }
  return 0;
}
    </code>
  
    <entry type ='int'>num</entry>

    <test>
      function correct19(num){        
        if(num&gt;1){
          for (i=2; i&lt;=num/2; i++){
            if( num%i == 0 ){
              return false;
            }
          }
          return true;
        }
        return false;
      }
      function wrong19(num){        
        if(num&gt;0){
          for (i=2; i&lt;=num/2; i++){
            if( num%i == 0 ){
              return false;
            }
          }
          return true;
        }
        return false;
      }
    </test>
  </question>
</dataBase>